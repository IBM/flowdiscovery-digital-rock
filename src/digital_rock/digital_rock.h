/**
 * \file src/digital_rock/digital_rock.h
 * \brief Contains the class that holds all the information on the system.
 *
 * \authors Rodrigo Neumann Barros Ferreira \<rneumann@br.ibm.com\>
 * \copyright Â© IBM Corp.
 * \date 2014
 *
 * This header file contains the DigitalRock class that hold all the information
 * about the sample system.
 */

#ifndef SRC_DIGITAL_ROCK_DIGITAL_ROCK_H_
#define SRC_DIGITAL_ROCK_DIGITAL_ROCK_H_

#include <armadillo>
#include <cstdint>
#include "src/exec_manager/config_reader.h"

/**
 * \class DigitalRock digital_rock.h "src/digital_rock/digital_rock.h"
 * \brief Holds all the information about the sample system and its analysis
 * algorithms.
 *
 * This class provides methods that extract information from a sample. The
 * actual data (either 8-bit greyscale levels or segmented 0's and 1's) is
 * stored in a private \c arma::Cube.
 */

class DigitalRock {
 public:
  /// Loads the input file stored in \c setup_cfg.input_file
  void LoadFile(const SetupConfig &setup_cfg);

  /// Loads the \c binary_image.raw file saved in \c setup_cfg.folder
  void LoadBinaryFile(const SetupConfig &setup_cfg);

  /// Calculates the greyscale histogram
  void CalculateHistogram(const SetupConfig &setup_cfg);

  /// Performs binary segmentation
  void PerformSegmentation(const SegmentationConfig &segmentation_cfg);

  /// Calculates the volume fraction
  void CalculateVolFrac(const SetupConfig &setup_cfg) const;

  /// Identifies the connected part of the pore network and the rock surface
  void DetermineMorphology(const SetupConfig &setup_cfg);

  /// Calculates centerline representation of connected pore network
  void CalculateCenterlines(const MorphologyConfig &morphology_cfg);

 private:
  /**
   * \brief 3D geometry of a rock sample
   *
   * This \c arma::Cube holds 8-bit unsigned integers [0-255] with the 3D
   * image generated by the mCT scan. It is initialised by the
   * \c LoadFile() method, segmented by \c PerformSegmentation() and labelled
   * with respect to its clusters by \c DetermineMorphology().
   */
  arma::Cube<uint8_t> xi_;

  /**
   * \brief Stores the greyscale histogram
   *
   * This matrix stores the greyscale levels and the histogram, assuming that
   * the input image is composed by 8-bit unsigned integers [0-255]. The first
   * column holds the greyscale levels, the second has the normalised
   * histogram and the third has the accumulated histogram. The greyscale
   * histogram is mainly used by some segmentation methods.
   */
  arma::Mat<double>::fixed<256, 3> hist_;

  /**
   * \brief Stores the connected porosity of the rock sample
   *
   * This member variable stores the connected porosity of the rock sample, that
   * is, the percentage of voxels that allow fluid flow. It has application in
   * the rock characterisation as well as for the fluid flow simulations.
   */
  double porosity_;

  /**
   * \brief Stores the surface-to-volume ratio of the pore (0) and rock (1) phases
   *
   * This member variable stores the surface-to-volume ratio of the pore (0) and rock (1) phases,
   * calculated as the number of surface voxels divided by the number of volume voxels.
   * It provides a measure of how important is the solid-fluid interaction to the overall flow
   * properties.
   */
  arma::Col<double>::fixed<2> surf2vol_;
};  // end of class DigitalRock

#endif  // SRC_DIGITAL_ROCK_DIGITAL_ROCK_H_
